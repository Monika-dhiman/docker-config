services:
  # postgres DB service
  database:
    image: postgres:16.1-alpine3.18
    container_name: requirements-prioritization-db
    restart: always
    ports:
      - ${DB_FORWARD_PORT:-5432}:5432
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-zenmonk}
      - POSTGRES_DB=${DB_DATABASE:-requirements_prioritization_db}
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - requirements_prioritization_network

  #pgAdmin
  pgadmin:
    image: dpage/pgadmin4
    container_name: requirements-prioritization-pgadmin
    restart: always
    ports:
      - ${PGADMIN_FORWARD_PORT:-8888}:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@zenmonk.tech}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-zenmonk}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - requirements_prioritization_network

  # RabbitMQ service
  rabbitmq:
    container_name: requirements-prioritization-rabbitmq
    image: 'rabbitmq:3-management-alpine'
    restart: always
    ports:
      - '${RABBITMQ_FORWARD_PORT:-5672}:5672'
      - '${RABBITMQ_MANAGEMENT_FORWARD_PORT:-15672}:15672'
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME:-guest}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD:-guest}
    volumes:
      - rabbitmq:/var/lib/rabbitmq/
      - rabbitmq_logs:/var/log/rabbitmq
    networks:
      - requirements_prioritization_network

  # Backend service
  backend:
    container_name: requirements-prioritization-backend
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    ports:
      - ${APP_FORWARD_PORT:-8080}:${APP_PORT:-8080}
    volumes:
      - .:/app
    networks:
      - requirements_prioritization_network
    restart: on-failure
    tty: true
    stdin_open: true
    expose:
      - ${APP_PORT:-8080}

networks:
  requirements_prioritization_network:
    name: requirements-prioritization-shared-network
    external: true

volumes:
  pg_data: {}
  pgadmin_data: {}
  rabbitmq: {}
  rabbitmq_logs: {}

#docker network create requirements-prioritization-shared-network
